Customer
-- Jumlah Transaksi per Customer
select
distinct customer,
count(customer) as transaction_count
from dbo.purchase_time$
group by customer
order by customer asc

------------------------------------------------------------ 

-- Klasifikasi Customer berdasarkan komoditas barang utama
with customer_table as(
select sum(a.total_items) as total_items_sold, b.customer
from dbo.purchase_percentage$ as a
left join dbo.purchase_time$ as b
on a.transaction_id = b.transaction_id
	left join dbo.discount$ as c
	on a.transaction_id = c.transaction_id
group by b.customer)

select customer_table.customer,
case when total_items_sold >= 200 then 'Premium'
         when total_items_sold >= 100 and total_items_sold < 200 then 'Gold'
         when total_items_sold >= 50 and total_items_sold < 100 then 'Silver'
         else 'Economy' end as customer_type
from customer_table
order by customer_table.customer asc

------------------------------------------------------------ 
   
-- Persentase jenis barang untuk masing-masing customer
select b.customer,
sum(a.total_items) as total_items,
sum(a.[Food%])/count(b.customer) as total_food_percent,
sum(a.[Fresh%])/count(b.customer) as total_fresh_percent,
sum(a.[Drinks%])/count(b.customer) as total_drinks_percent,
sum(a.[Home%])/count(b.customer) as total_home_percent,
sum(a.[Beauty%])/count(b.customer) as total_beauty_percent,
sum(a.[Health%])/count(b.customer) as total_health_percent,
sum(a.[Baby%])/count(b.customer) as total_baby_percent,
sum(a.[Pets%])/count(b.customer) as total_pets_percent
from dbo.purchase_percentage$ as a
left join purchase_time$ as b
on a.transaction_id = b.transaction_id
group by b.customer
order by b.customer asc

------------------------------------------------------------

-- Jumlah pengeluaran produk berdasarkan customer dan tipe produk(+ pembulatan angka)
select
b.customer,
round((sum(a.[Food%]/100*a.total_items)), 0) as food_sold,
round((sum(a.[Fresh%]/100*a.total_items)), 0)as fresh_sold,
round((sum(a.[Drinks%]/100*a.total_items)), 0) as drinks_sold,
round((sum(a.[Home%]/100*a.total_items)), 0) as home_sold,
round((sum(a.[Beauty%]/100*a.total_items)), 0) as beauty_sold,
round((sum(a.[Health%]/100*a.total_items)), 0) as health_sold,
round((sum(a.[Baby%]/100*a.total_items)), 0) as baby_sold,
round((sum(a.[Pets%]/100*a.total_items)), 0) as pets_sold
from dbo.purchase_percentage$ as a
left join dbo.purchase_time$ as b
on a.transaction_id = b.transaction_id
group by b.customer

------------------------------------------------------------

-- Identifikasi customer prioritas. Customer prioritas didefinisikan sebagai customer dengan jumlah transaksi dan pembelian item lebih dari rata-rata
with transaction_count as (
select customer, count(customer) as amount
from dbo.purchase_time$
group by customer)

select b.customer, a.amount
from transaction_count as a
left join dbo.purchase_time$ as b
on a.customer = b.customer
	left join dbo.purchase_percentage$ as c
	on b.transaction_id = c.transaction_id
where amount > (select avg(amount) from transaction_count) and total_items > (select avg(total_items) from dbo.purchase_percentage$)
group by b.customer, a.amount
order by b.customer asc

------------------------------------------------------------

-- Rata-rata discount yang diberikan untuk tiap costumer
select
avg(a.[discount%]) as avg_discount, customer
from dbo.discount$ as a
left join purchase_time$ as b
on a.transaction_id= b.transaction_id
group by customer
order by customer asc

------------------------------------------------------------

Operation
-- Jumlah pengeluaran produk berdasarkan waktu
select
b.weekday,
round((sum(a.[Food%]/100*a.total_items)), 0) as food_sold,
round((sum(a.[Fresh%]/100*a.total_items)), 0) as fresh_sold,
round((sum(a.[Drinks%]/100*a.total_items)), 0) as drinks_sold,
round((sum(a.[Home%]/100*a.total_items)), 0) as home_sold,
round((sum(a.[Beauty%]/100*a.total_items)), 0) as beauty_sold,
round((sum(a.[Health%]/100*a.total_items)), 0) as health_sold,
round((sum(a.[Baby%]/100*a.total_items)), 0) as baby_sold,
round((sum(a.[Pets%]/100*a.total_items)), 0) as pets_sold
from dbo.purchase_percentage$ as a
left join dbo.purchase_time$ as b
on a.transaction_id = b.transaction_id
group by b.weekday

------------------------------------------------------------

-- Jumlah transaksi per waktu
select
b.weekday,
b.hour,
count(a.transaction_id) as transaction_amount
from dbo.purchase_percentage$ as a
left join dbo.purchase_time$ as b
on a.transaction_id = b.transaction_id
group by b.weekday, b.hour
order by b.weekday asc, b.hour asc

------------------------------------------------------------

-- Pertumbuhan jumlah produk terjual
with items_count as(
select
b.weekday,
(sum(a.total_items)) as total_items,
(sum(a.[Food%]/100*a.total_items)) as food_sold,
(sum(a.[Fresh%]/100*a.total_items)) as fresh_sold,
(sum(a.[Drinks%]/100*a.total_items)) as drinks_sold,
(sum(a.[Home%]/100*a.total_items)) as home_sold,
(sum(a.[Beauty%]/100*a.total_items)) as beauty_sold,
(sum(a.[Health%]/100*a.total_items)) as health_sold,
(sum(a.[Baby%]/100*a.total_items)) as baby_sold,
(sum(a.[Pets%]/100*a.total_items)) as pets_sold
from dbo.purchase_percentage$ as a
left join dbo.purchase_time$ as b
on a.transaction_id = b.transaction_id
group by b.weekday)

select
items_count.weekday,
round(items_count.fresh_sold - lag(items_count.fresh_sold, 1) over (order by items_count.weekday), 0) as fresh_weekly_delta,
round(items_count.drinks_sold - lag(items_count.drinks_sold, 1) over (order by items_count.weekday), 0) as drinks_weekly_delta,
round(items_count.home_sold - lag(items_count.home_sold, 1) over (order by items_count.weekday), 0) as home_weekly_delta,
round(items_count.beauty_sold - lag(items_count.beauty_sold, 1) over (order by items_count.weekday), 0) as beauty_weekly_delta,
round(items_count.health_sold - lag(items_count.health_sold, 1) over (order by items_count.weekday), 0) as health_weekly_delta,
round(items_count.baby_sold - lag(items_count.baby_sold, 1) over (order by items_count.weekday), 0) as baby_weekly_delta,
round(items_count.pets_sold - lag(items_count.pets_sold, 1) over (order by items_count.weekday), 0) as pets_weekly_delta
from items_count